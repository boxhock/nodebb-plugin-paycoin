"use strict";

var db = require('./nodebb').db;


function renderCrypto(req, res, next){


			db.getObjectField('user:' + req.user.uid + ':settings', 'nodebb-plugin-reddcoin:address', function(err, address) {
			if (err) {
				callback(err);
			}

		// Temp console to check results			
		console.log(' Make API');

			res.json({
				address: address
			});	

		});

}

function renderSink(req, res, next) {
	/*
	Make sure the route matches your path to template exactly.

	If your route was:
		myforum.com/some/complex/route/
	your template should be:
		templates/some/complex/route.tpl
	and you would render it like so:
		res.render('some/complex/route');    */

	res.render('demo', {
		test: [
			{
				"name": "redd",
				"amount": "10000"
			},
			{
				"name": "gnasher",
				"amount": "50000"
			}

		]
	});
}

function renderHistory(req, res, next) {
	/*
	Make sure the route matches your path to template exactly.

	If your route was:
		myforum.com/some/complex/route/
	your template should be:
		templates/some/complex/route.tpl
	and you would render it like so:
		res.render('some/complex/route');    */

	res.render('history', {
		test: [
			{
				"name": "redd"
			},
			{
				"name": "gnasher"
			}

		]
	});
}

module.exports = function(app, middleware, controllers) {
	// We create two routes for every view. One API call, and the actual route itself.
	// Just add the buildHeader middleware to your route and NodeBB will take care of everything for you.

	app.get('/demo', middleware.buildHeader, renderSink);
	app.get('/api/demo', renderSink);
	app.get('/api/crypto',renderCrypto);
	app.get('/user/:userslug/history', middleware.buildHeader, renderHistory);
	app.get('/api/user/:userslug/history', renderHistory);
};
